@model BullsAndCowsASPnet.ViewModels.InputAndRoundsViewModel

@using Newtonsoft.Json

@using BullsAndCowsASPnet.GLL

@{

    ViewBag.Title = "Play";
}



<div class="container page-header">
    <div class="col-md-6">
        <h2>Bulls and Cows</h2>
    </div>
    <div class="col-md-6">
        <h1>@Model.ListOfAllGameRounds.UniqueNumber</h1>
    </div>

</div>


<div class="container">

    @for(int i = 0; i < Model.ListOfAllGameRounds.Rounds.Count; i++){

        <div class="row vertical-align bg-primary border-radius-5 m-5">


            <div class="col-md-4 text-right">
                <h3>Guess @(i+1)</h3>
            </div>


            <div class="col-md-4 text-center">
                <ul class="pagination pagination-lg">
                    <li>
                        <h1>@Model.ListOfAllGameRounds.Rounds[i].UserAssumptionNumber</h1>
                    </li>
                </ul>
            </div>

            <div class="col-md-4 text-center">
                <div class="col-md-6"><h4>Bulls: @Model.ListOfAllGameRounds.Rounds[i].Bulls</h4></div>
                <div class="col-md-6"><h4>Cows: @Model.ListOfAllGameRounds.Rounds[i].Cows</h4></div>
            </div>

        </div>
    }


</div>

@if (Model.ListOfAllGameRounds.Rounds != null)
{
    if (!GameNumbers.isContainingWrightAnswer(Model.ListOfAllGameRounds.Rounds))
    {
        <div class="row">
            <div class="col-md-12">
                <h2>You Win!!!</h2>
                <h1>Number: @Model.ListOfAllGameRounds.UniqueNumber</h1>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-12">
                <h2>Type your suggestion</h2>
                <div class="form-inline">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        string commissionJson = JsonConvert.SerializeObject(Model.ListOfAllGameRounds);
                        string roundsJson = JsonConvert.SerializeObject(Model.ListOfAllGameRounds.Rounds);
                        @Html.Hidden("ListOfAllGameRounds", commissionJson)
                        @Html.Hidden("ListOfRounds", roundsJson)
                        @Html.Hidden("UniqueNumberSize", Model.UniqueNumberSize)

                        
                        <div class="form-actions">
                            @Html.TextBoxFor(model => model.GamePlayViewModel.UserAssumptionNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GamePlayViewModel.UserAssumptionNumber)
                            <input type="submit" value="Try" class="btn btn-success btn-sm" />
                        </div>


                    }
                </div>



            </div>

        </div>
    }
}









